{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","index_es","title","ImageResults","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpen","img","setState","open","currentImg","handleClose","state","imageListContent","_this2","images","cols","map","tags","key","id","subtitle","user","actionIcon","onClick","largeImageURL","svg_icons","color","style","cursor","src","alt","actions","label","primary","modal","onRequestClose","width","Component","Search","onTextChange","e","val","target","value","defineProperty","name","fetchImages","onAmountChange","index","searchText","amount","axios","get","concat","apiUrl","apiKey","then","res","data","hits","catch","err","console","log","margin","onChange","floatingLabelText","fullWidth","textAlign","primaryText","length","ImageResults_ImageResults","App","className","styles","Fragment","Search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ab90b50.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar } from \"material-ui\";\n\nexport default function NavBar() {\n    return (\n        <div>\n            <AppBar title=\"Image Finder App\" />\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    GridList,\n    GridTile,\n    IconButton,\n    Dialog,\n    FlatButton\n} from \"material-ui\";\nimport { ActionZoomIn } from \"material-ui/svg-icons\";\n\nexport default class ImageResults extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            currentImg: \"\"\n        };\n    }\n\n    handleOpen = img => {\n        this.setState({ open: true, currentImg: img });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false, currentImg: \"\" });\n    };\n\n    render() {\n        let imageListContent;\n        const { images } = this.props;\n        if (images) {\n            imageListContent = (\n                <GridList cols={3}>\n                    {images.map(img => (\n                        <GridTile\n                            title={img.tags}\n                            key={img.id}\n                            subtitle={\n                                <span>\n                                    by <strong>{img.user}</strong>\n                                </span>\n                            }\n                            actionIcon={\n                                <IconButton\n                                    onClick={() =>\n                                        this.handleOpen(img.largeImageURL)\n                                    }\n                                >\n                                    <ActionZoomIn color=\"white\" />\n                                </IconButton>\n                            }\n                            onClick={() => this.handleOpen(img.largeImageURL)}\n                            style={{ cursor: \"pointer\" }}\n                        >\n                            <img src={img.largeImageURL} alt={img.tags} />\n                        </GridTile>\n                    ))}\n                </GridList>\n            );\n        } else {\n            imageListContent = null;\n        }\n\n        const actions = [\n            <FlatButton\n                label=\"Close\"\n                primary={true}\n                onClick={this.handleClose}\n            />\n        ];\n\n        return (\n            <div>\n                {imageListContent}\n                <Dialog\n                    actions={actions}\n                    modal={false}\n                    open={this.state.open}\n                    onRequestClose={this.handleClose}\n                >\n                    <img\n                        src={this.state.currentImg}\n                        style={{ width: \"100%\" }}\n                        alt=\"zoomed in\"\n                    />\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nImageResults.propTypes = {\n    images: PropTypes.array.isRequired\n};\n","import React, { Component } from \"react\";\nimport { TextField, SelectField, MenuItem } from \"material-ui\";\nimport axios from \"axios\";\nimport ImageResults from \"../image-results/ImageResults\";\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: \"\",\n            amount: 15,\n            apiUrl: \"https://pixabay.com/api\",\n            apiKey: \"12713807-2afa4d2fe79b08a56f881f55b\",\n            images: []\n        };\n    }\n\n    onTextChange = e => {\n        const val = e.target.value;\n        this.setState({ [e.target.name]: val }, () => this.fetchImages(val));\n    };\n\n    onAmountChange = (e, index, value) => {\n        const val = this.state.searchText;\n        this.setState({ amount: value }, () => this.fetchImages(val));\n    };\n\n    fetchImages = val => {\n        if (val === \"\") {\n            this.setState({ images: [] });\n        } else {\n            axios\n                .get(\n                    `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${\n                        this.state.searchText\n                    }&image_type=photo&per_page=${\n                        this.state.amount\n                    }&safesearch=true`\n                )\n                .then(res => this.setState({ images: res.data.hits }))\n                .catch(err => console.log(err));\n        }\n    };\n\n    render() {\n        return (\n            <div style={{margin: \"1rem\"}}>\n                <TextField\n                    name=\"searchText\"\n                    value={this.state.searchText}\n                    onChange={this.onTextChange}\n                    floatingLabelText=\"Search for images\"\n                    fullWidth={false}\n                />\n                <br />\n                <SelectField\n                    name=\"amount\"\n                    floatingLabelText=\"Amount\"\n                    value={this.state.amount}\n                    onChange={this.onAmountChange}\n                    style={{ textAlign: \"left\" }}\n                >\n                    <MenuItem value={5} primaryText=\"5\" />\n                    <MenuItem value={10} primaryText=\"10\" />\n                    <MenuItem value={15} primaryText=\"15\" />\n                    <MenuItem value={30} primaryText=\"30\" />\n                    <MenuItem value={50} primaryText=\"50\" />\n                </SelectField>\n                <br />\n                {this.state.images.length > 0 ? (\n                    <ImageResults images={this.state.images} />\n                ) : null}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\nimport Search from \"./components/search/Search\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <NavBar />\n                    <Search />\n                </React.Fragment>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}